A good start always depends on a solid first step.

JavaScript is backwords compatibility, it means that once something is accepted as valid JS by ECMA - future changes to the language will not break it. Code written in 1995 still works in modern JS. Hi, Python!

Is JS Interpreted or Compiled?

To get an answer we should take a look ar how JS handles errors.

JS source code is parsed before it is executed and looks for early errors, such as duplicate parameter name before code is executed.

The parsed JS is converted to an optimized (binary) form, and that "code" is subsequently executed.

This "compiled" code is then passed to JS virtual machine.

JS also can perform just in time processing of the post-parsing generated code.

Always use a strict mode. It's like a built in Linter.
Strict mode is turned on per-file. "use strict"; should be a first line of code in the file, whitespaces and comments can preceed "use strict";.
Strict mode can alternatively be turned on per-function scope, with exactly the same rules about its surroundings. If a file has strict mode turned on, the function-level strict mode pragmas are disallowed. Pick one, prefferably file one.

JS is an implementation of the ECMAScript standard (version ES2019 as of this writing), which is guided by the TC39 committee and hosted by ECMA. It runs in browsers and other JS environments such as Node.js.

JS is a multi-paradigm language, meaning the syntax and capabilities allow a developer to mix and match (and bend and reshape!) concepts from various major paradigms, such as procedural, object-oriented (OO/classes), and functional (FP).

JS is a compiled language, meaning the tools (including the JS engine) process and verify a program (reporting any errors!) before it executes.

With our language now defined, let's start getting to know its ins and outs.
